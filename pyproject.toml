[project]
name = "dapi-docs-webhook-watcher"
description = "Discord API webhook poller for Discord"
requires-python = "~=3.13"
version = "0.1"
dependencies = [
    "click~=8.1",
    "requests~=2.32",
    "python-dateutil~=2.9",
    "python-dotenv~=1.0",
]

[dependency-groups]
nox = ["nox[uv]==2025.2.9"]

audit = ["uv-secure"]
codespell = ["codespell==2.4.1"]
ruff = ["ruff==0.11.6"]

types = ["types-requests", "types-python-dateutil"]
mypy = ["mypy[faster-cache]==1.15.0", { include-group = "types" }]
pyright = ["pyright==1.1.400", { include-group = "types" }]

[tool.uv]
required-version = "~=0.6"

[tool.pyright]
include = ["noxfile.py", "runner.py", "pipelines"]

pythonVersion = "3.13"
typeCheckingMode = "strict"
reportMissingModuleSource = "error" # Is only "warning" on strict mode.

# Error code which are disabled even when general strict.
reportShadowedImports = "error"
reportCallInDefaultInitializer = "none"       # Ended up just complaining about cases where this was fine (e.g. timedeltas).
reportImplicitStringConcatenation = "none"    # Conflicts with Ruff config.
reportPropertyTypeMismatch = "error"
reportUninitializedInstanceVariable = "error"
reportUnnecessaryTypeIgnoreComment = "error"

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"
line-ending = "lf"
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D105",   # Missing docstring in magic method
    "INP001", # File `` is part of an implicit namespace package. Add an `__init__.py`.
    "S113",   # Probable use of `requests` call without timeout
    "EM101",  # Do not specify long error messages in exception constructor
    "TRY003", # Specify error message as part of exception
    "COM812", # Can interfiere with the formatter
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
force-single-line = true

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.ruff.lint.pycodestyle]
# Technically this is 120, but black has a policy of "1 or 2 over is fine if it is tidier", so we have to raise this.
max-line-length = 130

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
max-args = 20
max-branches = 20
max-returns = 15
max-statements = 100
